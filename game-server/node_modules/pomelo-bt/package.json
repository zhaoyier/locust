{
  "name": "pomelo-bt",
  "version": "0.0.1",
  "dependencies": {},
  "devDependencies": {
    "mocha": ">=0.0.1",
    "should": ">=0.0.1"
  },
  "readme": "#pomelo-bt - behavior tree for node.js\npomelo-bt是pomelo项目中AI模块所依赖的行为树模块，提供了基本的行为树实现。\n\n+ Tags: node.js\n\n##安装\n```\nnpm install pomelo-bt\n```\n\n##行为树节点基类\n###节点基类 Node\n所有行为树节点都从该类派生，构造函数接受一个blackboard实例作为参数。\n每个节点都提供一个执行的入口doAction方法。doAction执行完完毕后，向父节点返回执行结果：\nRES_SUCCESS, RES_FAIL, RES_WAIT分别代表当前执行成功，失败和仍在执行中。\n父节点根据子节点的返回值再做后续流程决策。\n\n###组合节点基类 Composite\n所有组合节点都从该类派生，内部可以维护多个孩子节点。提供addChild接口，添加孩子节点。\n\n###装饰节点基类 Decorator\n所有装饰节点都从该类派生，提供setChild接口，添加唯一的孩子节点。\n\n##组合节点\n###Sequence\n实现行为树sequence语义。\n####构造函数Sequenec(opts)\n+ opts.blackboard - 构造行为树节点的blackboard实例。\n\n###Parallel\n实现行为树parallel语义。\n####构造函数Parallel(opts)\n+ opts.blackboard - 构造行为树节点的blackboard实例。\n+ opts.policy - Parallel节点失败策略，可选值：Parallel.POLICY_FAIL_ON_ONE（默认值）, Parallel.POLICY_FAIL_ON_ALL。\n\n###Selector\n实现行为树selector语义。\n####构造函数Selector(opts)\n+ opts.blackboard - 构造行为树节点的blackboard实例。\n\n##装饰节点\n###Loop\n循环节点。\n####构造函数Loop(opts)\n+ opts.blackboard - 构造行为树节点的blackboard实例。\n+ opts.child - 孩子节点。\n+ opts.loopCond(blackboard) - 循环条件判断函数。返回true表示循环条件成立，否则不成立。\n\n##条件节点\n###Condition\n条件成立返回RES_SUCCESS, 反之返回RES_FAIL。\n####构造函数Condition(opts)\n+ opts.blackboard - 构造行为树节点的blackboard实例。\n+ opts.cond(blackboard) - 条件判断函数，返回true表示条件成立，否则不成立。\n\n##其他节点\n###If\n实现if语义，如果条件成立，则执行关联的孩子节点。\n####构造函数If(opts)\n+ opts.blackboard - 构造行为树节点的blackboard实例。\n+ opts.action - 孩子节点。\n+ opts.cond(blackboard) - 条件判断函数，返回true表示条件成立，否则不成立。\n\n##用法\n``` javascript\nvar util = require('util');\nvar bt = require('pomelo-bt');\nvar Sequence = bt.Sequence;\nvar Node = bt.Node;\n\n// define some action nodes\nvar HelloNode = function(blackboard) {\n  Node.call(this, blackboard);\n};\nutil.inherits(HelloNode, Node);\n\nHelloNode.prototype.doAction = function() {\n  console.log('Hello ');\n  return bt.RES_SUCCESS;\n};\n\n\nvar WorldNode = function(blackboard) {\n  Node.call(this, blackboard);\n};\nutil.inherits(WorldNode, Node);\n\nWorldNode.prototype.doAction = function() {\n  console.log('World');\n  return bt.RES_SUCCESS;\n};\n\nvar blackboard = {};\n\n// composite your behavior tree\nvar seq = new Sequence({blackboard: blackboard});\nvar hello = new HelloNode(blackboard);\nvar world = new WorldNode(blackboard);\n\nseq.addChild(hello);\nseq.addChild(world);\n\n// run the behavior tree\nseq.doAction();\n``` ",
  "readmeFilename": "README.md",
  "contributors": [
    {
      "name": "* Yongchang Zhou",
      "email": "changchang005@gmail.com"
    }
  ],
  "description": "pomelo-bt是pomelo项目中AI模块所依赖的行为树模块，提供了基本的行为树实现。",
  "_id": "pomelo-bt@0.0.1",
  "_from": "pomelo-bt@>=0.0.1"
}
