{
  "name": "crc",
  "version": "2.1.1",
  "description": "CRC JavaScript implementation",
  "keywords": [
    "crc"
  ],
  "main": "./lib/index.js",
  "scripts": {
    "test": "mocha test/*.spec.coffee",
    "pretest": "coffee --bare --output ./lib --compile ./src/*.coffee"
  },
  "author": {
    "name": "Alex Gorbatchev",
    "url": "https://github.com/alexgorbatchev"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*",
    "coffee-script": "~1.7.1",
    "coffee-errors": "~0.8.6",
    "chai": "~1.9.1"
  },
  "homepage": "https://github.com/alexgorbatchev/node-crc",
  "bugs": {
    "url": "https://github.com/alexgorbatchev/node-crc/issues"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/alexgorbatchev/node-crc.git"
  },
  "license": "MIT",
  "readme": "# crc\n\n[![NPM version](https://badge.fury.io/js/crc.svg)](http://badge.fury.io/js/crc)\n[![Dependency status](https://david-dm.org/alexgorbatchev/node-crc.svg)](https://david-dm.org/alexgorbatchev/node-crc)\n[![devDependency Status](https://david-dm.org/alexgorbatchev/node-crc/dev-status.svg)](https://david-dm.org/alexgorbatchev/node-crc#info=devDependencies)\n[![Build Status](https://api.travis-ci.org/alexgorbatchev/node-crc.svg?branch=master)](https://travis-ci.org/alexgorbatchev/node-crc)\n[![GitTip](http://img.shields.io/gittip/alexgorbatchev.svg)](https://www.gittip.com/alexgorbatchev/)\n\n[![NPM](https://nodei.co/npm/crc.svg)](https://npmjs.org/package/crc)\n\nModule for calculating Cyclic Redundancy Check (CRC).\n\n## Features\n\n* Pure JavaScript implementation, no dependencies.\n* Provides CRC Tables for optimized calculations.\n* Provides support for the following CRC algorithms:\n  * CRC1 `new crc.CRC1` or `crc.crc1(…)`\n  * CRC8 `new crc.CRC8` or `crc.crc8(…)`\n  * CRC8 1-Wire `new crc.CRC81Wire` or `crc.crc81wire(…)`\n  * CRC16 `new crc.CRC16` or `crc.crc16(…)`\n  * CRC16 CCITT `new crc.CRC16CCITT` or `crc.crc16ccitt(…)`\n  * CRC16 Modbus `new crc.CRC16Modbus` or `crc.crc16modbus(…)`\n  * CRC24 `new crc.CRC24` or `crc.crc24(…)`\n  * CRC32 `new crc.CRC32` or `crc.crc32(…)`\n\n## Installation\n\n    npm install crc\n\n## Running tests\n\n    $ npm install\n    $ npm test\n\n## Usage Example\n\nCalculate a CRC32:\n\n    var crc = require('crc');\n\n    crc.crc32('hello');\n    # => \"3610a686\"\n\nCalculate a CRC32 of a file:\n\n    crc.crc32(fs.readFileSync('README.md', 'utf8'));\n    # => \"127ad531\"\n\nOr using a `Buffer`:\n\n    crc.crc32(fs.readFileSync('README.md'));\n    # => \"127ad531\"\n\nIncrementally calculate a CRC32:\n\n    crc32 = new crc.CRC32()\n    crc32.update('one')\n    crc32.update('two')\n    crc32.update('three')\n    crc32.hexdigest()\n    # => \"09e1c092\"\n\nDirectly access the checksum:\n\n    crc32.checksum()\n    # => 165789842\n\n## Upgrading\n\nOlder version `0.3.0` was unfortunately ported from a not so reliable source and results were not matching other libraries. If you are using 3.x please continue using it.\n\n    crc8(String)             #=> Number\n    crcArc(String)           #=> Number\n    crcModbusString(string)  #=> Number\n    crcModbusHex(Number)     #=> Number\n    crc16(String)            #=> Number\n    crc16CCITT(String)       #=> Number\n    fcs16(String)            #=> Number\n    crc32(String)            #=> Number\n    hex8(Number)             #=> String\n    hex16(Number)            #=> String\n    hex32(Number)            #=> String\n\n## Thanks\n\nThis module is a direct port from Ruby's [Digest CRC](https://github.com/postmodern/digest-crc)\nmodule. Which is in turn based on [pycrc](http://www.tty1.net/pycrc/) library\nwhich is able to generate C source-code for all of the CRC algorithms,\nincluding their CRC Tables.\n\n# License\n\nThe MIT License (MIT)\n\nCopyright (c) 2014 Alex Gorbatchev\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "crc@2.1.1",
  "dist": {
    "shasum": "f9cfadd8bfd3ec404ccae4992fcb3efb5ad4bef8"
  },
  "_from": "crc@>=0.0.1",
  "_resolved": "https://registry.npmjs.org/crc/-/crc-2.1.1.tgz"
}
